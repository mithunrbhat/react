{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","totalCounters","className","href","Counter","render","getBadgeClasses","formatCount","onClick","props","onIncrement","counter","onDelete","id","value","this","classes","Component","Counters","onReset","counters","addEle","map","App","state","handleIncrement","index","indexOf","setState","handleDelete","counterId","filter","c","handleReset","handleAddEle","counterEle","length","push","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.631baeb8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = ({ totalCounters }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <a href=\"#\" className=\"navbar-brand\">\r\n        Navbar{\" \"}\r\n        <span className=\"badge badge-pill badge-secondary\">\r\n          {totalCounters}\r\n        </span>\r\n      </a>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"zero\" : value;\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <div>\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    const { onReset, counters, onIncrement, onDelete, addEle } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={onReset} className=\"btn btn-sm btn-primary m-2\">\r\n          Reset\r\n        </button>\r\n        <button onClick={addEle} className=\"btn btn-sm btn-primary m-2\">\r\n          +\r\n        </button>\r\n        {counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            onIncrement={onIncrement}\r\n            onDelete={onDelete}\r\n            counter={counter}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    // counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleAddEle = () => {\n    const counterLength = this.state.counters.length;\n    const counterEle = { id: counterLength + 1, value: 0 };\n    const counters = this.state.counters.push(counterEle);\n    this.setState({ counters });\n  };\n\n  render = () => {\n    return (\n      <React.Fragment>\n        <Navbar\n          totalCounters={this.state.counters.filter((c) => c.value > 0).length}\n        />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}\n            addEle={this.handleAddEle}\n          />\n        </main>\n      </React.Fragment>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import HookCounter from \"./components/hooksCounter\";\n// import Hook1 from \"./components/hook1\";\n// import HoolFour from \"./components/hook2\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Hook1 /> */}\n    {/* <HoolFour /> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}